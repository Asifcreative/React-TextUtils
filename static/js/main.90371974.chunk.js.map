{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","src","logo","alt","to","title","type","id","About","placeholder","onClick","toggleMode","htmlFor","btnText","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","setbtnText","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0MAAe,G,MAAA,IAA0B,kC,cCK1B,SAASA,EAAOC,GAC7B,OACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,SACzC,cAAC,IAAD,CAAMJ,UAAU,eAAeK,GAAG,IAAlC,SACGN,EAAMO,QAET,wBACEN,UAAU,iBACVO,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMP,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,UACE,qBAAIR,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAY,eAAa,OAAOK,GAAG,IAAnD,oBAIF,oBAAIL,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWK,GAAG,SAA9B,SACGN,EAAMU,UAGX,oBAAIT,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWK,GAAG,IAA9B,6BAKJ,uBAAML,UAAU,SAAhB,UACE,uBACEA,UAAU,oBACVO,KAAK,SACLG,YAAY,SACZ,aAAW,WAEb,wBAAQV,UAAU,0BAA0BO,KAAK,SAAjD,0BAKF,sBAAKP,UAAU,8BAAf,UACE,uBAAOA,UAAU,mBAAmBW,QAASZ,EAAMa,WAAYL,KAAK,WAAWC,GAAG,2BAClF,uBAAOR,UAAS,gCAAwC,UAAbD,EAAME,KAAe,OAAO,SAAWY,QAAQ,yBAA1F,SAAoHd,EAAMe,kBCtDvH,SAASC,EAAShB,GAC7B,IA8BA,EAAwBiB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACA,sBAAKlB,UAAU,iBAAkBmB,MAAO,CAACC,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAA5E,UACI,sBAAKD,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMsB,UACnC,0BAAUrB,UAAU,eAAeQ,GAAG,QAAQc,KAAK,IAAIC,MAAON,EAAMO,SApBzD,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAkBiFJ,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,UAAWmB,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,cAEjM,wBAAQ2B,SAAwB,IAAdX,EAAKY,OAAY7B,UAAU,4BAA4BW,QAtC/D,WAElB,IAAImB,EAASb,EAAKc,cAClBb,EAAQY,GACR/B,EAAMiC,UAAU,yBAAyB,YAkCjC,uBACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAY7B,UAAU,4BAA4BW,QAjC9D,WACnB,IAAImB,EAASb,EAAKgB,cAClBf,EAAQY,GACR/B,EAAMiC,UAAU,yBAAyB,YA8BjC,uBACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAY7B,UAAU,4BAA4BW,QA7BjE,WAEhBO,EADa,IAEbnB,EAAMiC,UAAU,qBAAqB,YA0B7B,wBACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAY7B,UAAU,4BAA4BW,QArBlE,WACfuB,UAAUC,UAAUC,UAAUnB,GAC9BoB,SAASC,eAAeC,kBACxBxC,EAAMiC,UAAU,uBAAuB,YAkB/B,uBACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAY7B,UAAU,4BAA4BW,QAjB3D,WACtB,IAAImB,EAASb,EAAKuB,MAAM,SACxBtB,EAAQY,EAAQW,KAAK,MACrB1C,EAAMiC,UAAU,wBAAwB,YAchC,oCAER,sBAAKhC,UAAU,YAAYmB,MAAO,CAACC,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAAtE,UACI,+CACA,8BAAIgB,EAAKuB,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQd,UAAaA,OAArE,cAAwFZ,EAAKY,OAA7F,iBACA,8BAAI,KAAQZ,EAAKuB,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQd,UAAaA,OAA7E,mBACA,yCACA,4BAAIZ,EAAKY,OAAO,EAAEZ,EAAK,8BClDpB,SAASR,EAAMV,GAC1B,OACI,sBAAKC,UAAU,iBAAkBmB,MAAO,CAACC,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAA5E,UACI,oBAAIkB,MAAO,CAACC,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAA/C,sBACA,sBAAKD,UAAU,YAAYQ,GAAG,mBAA9B,UACI,sBAAKR,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBQ,GAAG,aAAYW,MAAO,CAACC,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAA3F,SACI,wBAAQkB,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,OAAQmB,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAAUD,UAAU,mBAAmBO,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAxP,iCAIJ,qBAAKY,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,QAAUO,GAAG,cAAcR,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA9K,SACI,sBAAKA,UAAU,iBAAf,UACI,8EADJ,6WACua,mDADva,uDAKR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBQ,GAAG,aAApC,SACI,wBAAQW,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,OAAQmB,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAAUD,UAAU,6BAA6BO,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAnQ,iCAIJ,qBAAKY,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,QAAUO,GAAG,cAAcR,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAAzK,SACI,sBAAKA,UAAU,iBAAf,UACI,+EADJ,8WACya,mDADza,uDAKR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBQ,GAAG,eAApC,SACI,wBAAQW,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,OAAQmB,MAAmB,UAAbrB,EAAME,KAAe,QAAQ,SAAUD,UAAU,6BAA6BO,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAArQ,iCAIJ,qBAAKY,MAAO,CAACQ,gBAA6B,UAAb5B,EAAME,KAAe,QAAQ,QAASO,GAAG,gBAAgBR,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA5K,SACI,sBAAKA,UAAU,iBAAf,UACI,8EADJ,8WACwa,mDADxa,6DCpCT,SAAS4C,EAAM7C,GAK5B,OACE,qBAAKoB,MAAO,CAAC0B,OAAO,QAApB,SACE9C,EAAM+C,OAAS,sBAAK9C,UAAS,sBAAkBD,EAAM+C,MAAMvC,KAA9B,gCAAkEwC,KAAK,QAArF,UACX,iCAPa,SAACC,GAChB,IAAMC,EAAQD,EAAKf,cACnB,OAAOgB,EAAMC,OAAO,GAAGnB,cAAgBkB,EAAME,MAAM,GAKxCC,CAAWrD,EAAM+C,MAAMvC,QADrB,IACsCR,EAAM+C,MAAMO,SHwDvEvD,EAAOwD,aAAe,CACpBhD,MAAO,aACPG,MAAO,S,WITM8C,MA7Cf,WAEE,MAAwBvC,mBAAS,SAAjC,mBAAOf,EAAP,KAAauD,EAAb,KACA,EAA0BxC,mBAAS,MAAnC,mBAAO8B,EAAP,KAAcW,EAAd,KACMzB,EAAY,SAAC0B,EAASnD,GAC1BkD,EAAS,CACPJ,IAAMK,EACNnD,KAAKA,IAEPoD,YAAW,WACTF,EAAS,QACR,MAEL,EAA8BzC,mBAAS,aAAvC,mBAAOF,EAAP,KAAgB8C,EAAhB,KAcA,OACE,mCACE,eAAC,IAAD,WACE,cAAC9D,EAAD,CAAQQ,MAAM,YAAYG,MAAM,WAAWR,KAAMA,EAAMW,WAhB1C,WACL,UAATX,GACDuD,EAAQ,QACRI,EAAW,cACX5B,EAAU,oBAAoB,WAC9BK,SAASwB,KAAK1C,MAAMQ,gBAAkB,YAEtC6B,EAAQ,SACRI,EAAW,aACX5B,EAAU,qBAAqB,WAC/BK,SAASwB,KAAK1C,MAAMQ,gBAAkB,UAM2Cb,QAASA,IACxF,cAAC8B,EAAD,CAAQE,MAAOA,IACf,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,SAAlB,SACA,cAACtD,EAAD,CAAQqD,OAAK,EAAC7D,KAAMA,MAEpB,cAAC,IAAD,CAAO8D,KAAK,IAAZ,SACA,cAAChD,EAAD,CAAUM,QAAQ,kCAAkCpB,KAAMA,EAAM+B,UAAWA,eCvCxEgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,M","file":"static/js/main.90371974.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.About}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Contact Us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckChecked\">{props.btnText}</label>\r\n          </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  About: PropTypes.string,  \r\n};\r\nNavbar.defaultProps = {\r\n  title: 'Site Title',\r\n  About: 'About',\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"upper case was click\" + text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to UPPERCASE!\",\"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to lowercase!\",\"success\");\r\n    }\r\n    const handleClear = ()=>{\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Area Cleared!\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"handle change was click\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText= text.split(/[  ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\"  style={{color:props.mode==='light'?'black':'white'}} >\r\n            <div className=\"mb-3\">\r\n                <h2 className=\"text-center\">{props.heading}</h2>\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"6\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#b1b1b1', color:props.mode==='light'?'black':'white'}} ></textarea>\r\n            </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>UPPERCASE</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClear}>Clear text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra spaces</button>\r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h2> Text Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\n\nexport default function About(props) {\n    return (\n        <div className=\"container my-2\"  style={{color:props.mode==='light'?'black':'white'}}>\n            <h2 style={{color:props.mode==='light'?'black':'white'}}>About Us</h2>\n            <div className=\"accordion\" id=\"accordionExample\" >\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\"style={{color:props.mode==='light'?'white':'black'}}>\n                        <button style={{backgroundColor:props.mode==='light'?'white':'gray', color:props.mode==='light'?'black':'white'}} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            Accordion Item #1\n                        </button>\n                    </h2>\n                    <div style={{backgroundColor:props.mode==='light'?'white':'gray'}}  id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button style={{backgroundColor:props.mode==='light'?'white':'gray', color:props.mode==='light'?'black':'white'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                            Accordion Item #2\n                        </button>\n                    </h2>\n                    <div style={{backgroundColor:props.mode==='light'?'white':'gray'}}  id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button style={{backgroundColor:props.mode==='light'?'white':'gray', color:props.mode==='light'?'black':'white'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            Accordion Item #3\n                        </button>\n                    </h2>\n                    <div style={{backgroundColor:props.mode==='light'?'white':'gray'}} id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n     {props.alert && <div className= {`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');//whether dark mood is enabled\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg : message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const [btnText, setbtnText] = useState('Dark Mode');\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      setbtnText('light Mode');\n      showAlert('Dark Mode Enabled','success');\n      document.body.style.backgroundColor = '#3e3d3e';\n    }else{\n      setMode('light');\n      setbtnText('Dark Mode')\n      showAlert('Light Mode Enabled','success');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" About=\"About Us\" mode={mode} toggleMode={toggleMode} btnText={btnText}/>\n        <Alert  alert={alert}/>\n        <Switch>\n            <Route exact path=\"/about\">\n            <About  exact mode={mode}/>\n            </Route>\n            <Route path=\"/\">\n            <TextForm heading=\"Enter the Text to analyze below\" mode={mode} showAlert={showAlert}/>\n            </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}